# Generated by Django 2.2.6 on 2021-12-14 08:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('dashboard', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('object_status', models.SmallIntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('c_id', models.AutoField(primary_key=True, serialize=False)),
                ('fname', models.CharField(max_length=50)),
                ('lname', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=70)),
                ('email', models.CharField(max_length=50)),
                ('cmt', models.CharField(max_length=1000)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Emailtemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('object_status', models.SmallIntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('t_type', models.PositiveIntegerField(choices=[(1, 'User Signup'), (2, 'Agent Signup'), (3, 'User change password')], default=0)),
                ('subject', models.CharField(max_length=100)),
                ('template', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Mt4trades',
            fields=[
                ('ticket', models.IntegerField(primary_key=True, serialize=False)),
                ('login', models.IntegerField()),
                ('symbol', models.CharField(max_length=16)),
                ('digits', models.IntegerField()),
                ('cmd', models.IntegerField()),
                ('volume', models.IntegerField()),
                ('open_time', models.DateTimeField()),
                ('open_price', models.FloatField()),
                ('sl', models.FloatField()),
                ('tp', models.FloatField()),
                ('close_time', models.DateTimeField()),
                ('expiration', models.DateTimeField()),
                ('reason', models.IntegerField()),
                ('conv_rate1', models.FloatField()),
                ('conv_rate2', models.FloatField()),
                ('commission', models.FloatField()),
                ('commission_agent', models.FloatField()),
                ('swaps', models.FloatField()),
                ('close_price', models.FloatField()),
                ('profit', models.FloatField()),
                ('taxes', models.FloatField()),
                ('comment', models.CharField(max_length=32)),
                ('internal_id', models.IntegerField()),
                ('margin_rate', models.FloatField()),
                ('timestamp', models.IntegerField()),
                ('magic', models.IntegerField()),
                ('gw_volume', models.IntegerField()),
                ('gw_open_price', models.IntegerField()),
                ('gw_close_price', models.IntegerField()),
                ('modify_time', models.DateTimeField()),
                ('status', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'MT4_TRADES',
            },
        ),
        migrations.CreateModel(
            name='Mt4users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.IntegerField()),
                ('name', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50)),
                ('balance', models.FloatField()),
            ],
            options={
                'db_table': 'MT4_USERS',
            },
        ),
        migrations.CreateModel(
            name='Register',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('object_status', models.SmallIntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('client_id', models.BigIntegerField(default=1001, unique=True)),
                ('fname', models.CharField(max_length=100)),
                ('lname', models.CharField(max_length=100)),
                ('uname', models.CharField(max_length=100)),
                ('dob', models.DateField(max_length=8)),
                ('verify', models.BooleanField(default=False)),
                ('email', models.CharField(max_length=50, unique=True)),
                ('mob', models.CharField(max_length=13)),
                ('pwd1', models.CharField(max_length=100)),
                ('pwd2', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('secondaryemail', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('reasonsecondaryemail', models.CharField(blank=True, max_length=500, null=True)),
                ('city', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('state', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('sans', models.CharField(blank=True, max_length=100, null=True)),
                ('client_ib', models.CharField(blank=True, max_length=100, null=True)),
                ('acc_limit', models.IntegerField(default=4)),
                ('demo_acc_limit', models.IntegerField(default=2)),
                ('acc_type', models.ManyToManyField(to='dashboard.Addaccounttype')),
                ('sque', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.Securityque')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegisterUserCampaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('object_status', models.SmallIntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('mt4_id', models.BigIntegerField(default=0)),
                ('ref_code', models.BigIntegerField(blank=True, default=0, null=True, verbose_name='Ref Code')),
                ('campaign_code', models.CharField(blank=True, help_text='Campaign Code', max_length=100, null=True, verbose_name='Campaign Code')),
                ('campaign', models.CharField(blank=True, help_text='Campaign Name', max_length=100, null=True, verbose_name='Campaign Name')),
                ('status', models.IntegerField(default=0)),
                ('register', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sportapp.Register')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('object_status', models.SmallIntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('email_confirmed', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Addsalesnotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('object_status', models.SmallIntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('note', models.CharField(blank=True, max_length=1000, null=True)),
                ('client_id', models.CharField(blank=True, max_length=10, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sportapp.Register')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
